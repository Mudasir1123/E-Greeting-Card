@page
@model LoginModel

@{
    ViewData["Title"] = "Log In - E-Greeting";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css" />
    <style>
        .custom-checkbox {
            appearance: none;
            width: 1.25rem;
            height: 1.25rem;
            border: 2px solid #d1d5db;
            border-radius: 4px;
            position: relative;
            cursor: pointer;
            transition: all 0.2s ease;
        }

            .custom-checkbox:checked {
                background-color: #4f46e5;
                border-color: #4f46e5;
            }

                .custom-checkbox:checked::after {
                    content: '';
                    position: absolute;
                    left: 6px;
                    top: 2px;
                    width: 5px;
                    height: 10px;
                    border: solid white;
                    border-width: 0 2px 2px 0;
                    transform: rotate(45deg);
                }

        .error-message {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: block;
        }

        .input-error {
            border-color: #ef4444 !important;
        }

        .validation-summary-errors ul {
            list-style-type: none;
            padding-left: 0;
            margin-bottom: 0;
        }
    </style>
</head>
<body class="bg-gray-50">
    <main class="min-h-screen flex items-center justify-center py-12 px-4">
        <div class="bg-white rounded-lg shadow-md w-full max-w-md p-8">
            <div class="text-center mb-8">
                <h1 class="text-2xl font-bold text-gray-900 mb-2">@ViewData["Title"]</h1>
                <p class="text-gray-600">Use a local account to log in.</p>
            </div>

            <div asp-validation-summary="ModelOnly" class="mb-4 p-4 bg-red-100 text-red-700 rounded-md" role="alert"></div>

            <form id="account" method="post" novalidate>
                <div class="space-y-4">
                    <!-- Email Field -->
                    <div>
                        <label asp-for="Input.Email" class="block text-sm font-medium text-gray-700 mb-1"></label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="ri-mail-line text-gray-400"></i>
                            </div>
                            <input asp-for="Input.Email" id="Input_Email"
                                   class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-md text-gray-900
                                          focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm"
                                   autocomplete="username" aria-required="true" placeholder="name@example.com" />
                            <span asp-validation-for="Input.Email" class="error-message"></span>
                        </div>
                    </div>

                    <!-- Password Field -->
                    <div>
                        <div class="flex items-center justify-between mb-1">
                            <label asp-for="Input.Password" class="block text-sm font-medium text-gray-700"></label>
                            <a id="forgot-password" asp-page="./ForgotPassword" class="text-sm font-medium text-indigo-600 hover:text-indigo-500">Forgot password?</a>
                        </div>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="ri-lock-line text-gray-400"></i>
                            </div>
                            <input asp-for="Input.Password" id="Input_Password"
                                   class="block w-full pl-10 pr-10 py-2.5 border border-gray-300 rounded-md text-gray-900
                                          focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 text-sm"
                                   autocomplete="current-password" aria-required="true" placeholder="password" />
                            <button type="button" id="togglePassword" class="absolute inset-y-0 right-0 pr-3 flex items-center" aria-label="Toggle password visibility">
                                <i class="ri-eye-line text-gray-400 hover:text-gray-500"></i>
                            </button>
                            <span asp-validation-for="Input.Password" class="error-message"></span>
                        </div>
                    </div>

                    <!-- Remember Me -->
                    <div class="flex items-center">
                        <input asp-for="Input.RememberMe" id="Input_RememberMe" class="custom-checkbox" />
                        <label asp-for="Input.RememberMe" class="ml-2 block text-sm text-gray-700 cursor-pointer">
                            @Html.DisplayNameFor(m => m.Input.RememberMe)
                        </label>
                    </div>

                    <!-- Login Button -->
                    <button id="login-submit" type="submit" class="w-full bg-indigo-600 text-white py-2.5 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        Log in
                    </button>
                </div>
            </form>

            <!-- Register Link -->
            <div class="mt-6 text-center">
                <p class="text-gray-600">
                    Don't have an account?
                    <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl" class="font-medium text-indigo-600 hover:text-indigo-500">Register</a>
                </p>
            </div>

            <!-- External Logins -->
            @if ((Model.ExternalLogins?.Count ?? 0) > 0)
            {
                <div class="mt-8">
                    <div class="relative">
                        <div class="absolute inset-0 flex items-center">
                            <div class="w-full border-t border-gray-200"></div>
                        </div>
                        <div class="relative flex justify-center text-sm">
                            <span class="px-2 bg-white text-gray-500">Or continue with</span>
                        </div>
                    </div>

                    <div class="mt-6 grid grid-cols-3 gap-3">
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="w-full">
                            @foreach (var provider in Model.ExternalLogins!)
                            {
                                <button type="submit" class="w-full inline-flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50"
                                        name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">
                                    @if (provider.DisplayName == "Google")
                                    {
                                        <i class="ri-google-fill text-red-500"></i>
                                    }
                                    else if (provider.DisplayName == "Facebook")
                                    {
                                        <i class="ri-facebook-fill text-blue-600"></i>
                                    }
                                    else
                                    {
                                        @provider.DisplayName
                                    }
                                </button>
                            }
                        </form>
                    </div>
                </div>
            }
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Toggle password visibility
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('Input_Password');

            togglePassword?.addEventListener('click', () => {
                const isPassword = passwordInput.type === 'password';
                passwordInput.type = isPassword ? 'text' : 'password';

                // Toggle eye icon
                const icon = togglePassword.querySelector('i');
                icon.className = isPassword ? 'ri-eye-off-line' : 'ri-eye-line';
            });

            // Validation helpers
            const form = document.getElementById('account');
            const emailInput = document.getElementById('Input_Email');
            const passwordInputField = passwordInput; // same as above

            function validateField(field) {
                const errorElement = field.nextElementSibling;
                if (!field.checkValidity()) {
                    field.classList.add('input-error');
                    if (errorElement) errorElement.style.display = 'block';
                } else {
                    field.classList.remove('input-error');
                    if (errorElement) errorElement.style.display = 'none';
                }
            }

            // Attach event listeners for real-time validation
            if (emailInput) {
                emailInput.addEventListener('input', () => validateField(emailInput));
                emailInput.addEventListener('blur', () => validateField(emailInput));
            }

            if (passwordInputField) {
                passwordInputField.addEventListener('input', () => validateField(passwordInputField));
                passwordInputField.addEventListener('blur', () => validateField(passwordInputField));
            }

            // Initial validation on load
            if (emailInput) validateField(emailInput);
            if (passwordInputField) validateField(passwordInputField);
        });
    </script>
</body>
</html>
