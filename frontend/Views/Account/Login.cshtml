@{
    ViewData["Title"] = "Log In - E-Greeting";
    Layout = null; // Remove if you have a shared layout
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <script src="https://cdn.tailwindcss.com/3.4.16"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
    <style>
        .custom-checkbox {
            appearance: none;
            width: 1.25rem;
            height: 1.25rem;
            border: 2px solid #d1d5db;
            border-radius: 4px;
            position: relative;
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .custom-checkbox:checked {
            background-color: #4f46e5;
            border-color: #4f46e5;
        }
        .custom-checkbox:checked::after {
            content: '';
            position: absolute;
            left: 6px;
            top: 2px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
        }
        .error-message {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        .input-error {
            border-color: #ef4444 !important;
        }
    </style>
</head>
<body class="bg-gray-50">
    <main class="min-h-screen flex items-center justify-center py-12 px-4">
        <div class="bg-white rounded-lg shadow-md w-full max-w-md p-8">
            <div class="text-center mb-8">
                <h1 class="text-2xl font-bold text-gray-900 mb-2">Welcome Back</h1>
                <p class="text-gray-600">Log in to your account</p>
            </div>

            @if (ViewBag.SuccessMessage != null)
            {
                <div class="mb-4 p-4 bg-green-100 text-green-700 rounded-md">
                    @ViewBag.SuccessMessage
                </div>
            }

            @if (ViewData.ModelState.ErrorCount > 0)
            {
                <div class="mb-4 p-4 bg-red-100 text-red-700 rounded-md">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <p>@error.ErrorMessage</p>
                    }
                </div>
            }

            <form id="loginForm" asp-controller="Account" asp-action="Login" method="post" novalidate>
                <div class="space-y-4">
                    <!-- Email Field -->
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email</label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="ri-mail-line text-gray-400"></i>
                            </div>
                            <input type="email" id="email" name="email"
                                   class="block w-full pl-10 pr-3 py-2.5 border border-gray-300 rounded-md text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary/20 focus:border-primary text-sm"
                                   placeholder="your@email.com"
                                   required>
                            <div id="emailError" class="error-message hidden">Valid email is required</div>
                        </div>
                    </div>

                    <!-- Password Field -->
                    <div>
                        <div class="flex items-center justify-between mb-1">
                            <label for="password" class="block text-sm font-medium text-gray-700">Password</label>
                            <a asp-controller="Account" asp-action="ForgotPassword" class="text-sm font-medium text-primary hover:text-primary/80">Forgot Password?</a>
                        </div>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i class="ri-lock-line text-gray-400"></i>
                            </div>
                            <input type="password" id="password" name="password"
                                   class="block w-full pl-10 pr-10 py-2.5 border border-gray-300 rounded-md text-gray-900 focus:outline-none focus:ring-2 focus:ring-primary/20 focus:border-primary text-sm"
                                   placeholder="••••••••"
                                   minlength="6"
                                   required>
                            <button type="button" id="togglePassword" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                                <i class="ri-eye-line text-gray-400 hover:text-gray-500"></i>
                            </button>
                            <div id="passwordError" class="error-message hidden">Password must be at least 6 characters</div>
                        </div>
                    </div>

                    <!-- Remember Me -->
                    <div class="flex items-center">
                        <input type="checkbox" id="remember" name="remember" class="custom-checkbox">
                        <label for="remember" class="ml-2 block text-sm text-gray-700">Remember me</label>
                    </div>

                    <!-- Login Button -->
                    <button type="submit" class="w-full bg-primary text-white py-2.5 font-medium rounded-md hover:bg-primary/90 transition-colors mt-2">
                        Log In
                    </button>
                </div>
            </form>

            <!-- Sign Up Link -->
            <div class="mt-6 text-center">
                <p class="text-gray-600">
                    Don't have an account?
                    <a asp-controller="Account" asp-action="SignUp" class="font-medium text-primary hover:text-primary/80">Sign Up</a>
                </p>
            </div>

            <!-- Social Login -->
            <div class="mt-8">
                <div class="relative">
                    <div class="absolute inset-0 flex items-center">
                        <div class="w-full border-t border-gray-200"></div>
                    </div>
                    <div class="relative flex justify-center text-sm">
                        <span class="px-2 bg-white text-gray-500">Or continue with</span>
                    </div>
                </div>

                <div class="mt-6 grid grid-cols-3 gap-3">
                    <button type="button" class="flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                        <i class="ri-google-fill text-red-500"></i>
                    </button>
                    <button type="button" class="flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                        <i class="ri-facebook-fill text-blue-600"></i>
                    </button>
                    <button type="button" class="flex justify-center items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50">
                        <i class="ri-apple-fill"></i>
                    </button>
                </div>
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('loginForm');
            const emailInput = document.getElementById('email');
            const passwordInput = document.getElementById('password');
            const togglePassword = document.getElementById('togglePassword');

            // Toggle password visibility
            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);

                // Toggle eye icon
                const icon = togglePassword.querySelector('i');
                icon.className = type === 'password' ? 'ri-eye-line' : 'ri-eye-off-line';
            });

            // Real-time validation
            [emailInput, passwordInput].forEach(input => {
                input.addEventListener('input', () => validateField(input));
                input.addEventListener('blur', () => validateField(input));
            });

            // Form submission validation
            form.addEventListener('submit', function(e) {
                let isValid = true;

                [emailInput, passwordInput].forEach(input => {
                    if (!validateField(input)) {
                        isValid = false;
                    }
                });

                if (!isValid) {
                    e.preventDefault();
                }
            });

            function validateField(field) {
                const errorElement = document.getElementById(`${field.id}Error`);

                if (!field.checkValidity()) {
                    field.classList.add('input-error');
                    errorElement.classList.remove('hidden');

                    if (field.validity.valueMissing) {
                        errorElement.textContent = `${field.labels[0].textContent} is required`;
                    } else if (field.validity.typeMismatch) {
                        errorElement.textContent = 'Please enter a valid email address';
                    } else if (field.validity.tooShort) {
                        errorElement.textContent = `Password must be at least ${field.minLength} characters`;
                    }

                    return false;
                } else {
                    field.classList.remove('input-error');
                    errorElement.classList.add('hidden');
                    return true;
                }
            }
        });
    </script>
</body>
</html>