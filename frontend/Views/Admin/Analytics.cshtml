@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@{
    ViewData["Title"] = "Analytics | Admin Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="max-w-7xl mx-auto">
    <!-- Page Header -->
    <div class="flex items-center justify-between mb-6">
        <div>
            <h1 class="text-2xl font-bold text-gray-900">Analytics Dashboard</h1>
            <p class="mt-1 text-sm text-gray-500">Monitor platform performance, user engagement, and business metrics</p>
        </div>
        <div class="flex space-x-3">
            <div class="relative">
                <button id="date-range-button" class="px-4 py-2 bg-white border border-gray-300 rounded-button text-sm font-medium text-gray-700 hover:bg-gray-50 whitespace-nowrap flex items-center">
                    <div class="w-4 h-4 flex items-center justify-center mr-2">
                        <i class="ri-calendar-line"></i>
                    </div>
                    <span id="date-range-text">Last 30 Days</span>
                    <div class="w-4 h-4 flex items-center justify-center ml-2">
                        <i class="ri-arrow-down-s-line"></i>
                    </div>
                </button>
                <div id="date-range-dropdown" class="hidden absolute right-0 mt-2 w-56 bg-white border border-gray-200 rounded-md shadow-lg z-10">
                    <div class="py-1">
                        <button class="date-range-option w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-range="7">Last 7 Days</button>
                        <button class="date-range-option w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-range="30">Last 30 Days</button>
                        <button class="date-range-option w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-range="90">Last 90 Days</button>
                        <button class="date-range-option w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-range="365">Last 12 Months</button>
                        <div class="border-t border-gray-200 my-1"></div>
                        <button class="date-range-option w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" data-range="custom">Custom Range</button>
                    </div>
                </div>
            </div>
            <button class="px-4 py-2 bg-white border border-gray-300 rounded-button text-sm font-medium text-gray-700 hover:bg-gray-50 whitespace-nowrap">
                <div class="flex items-center">
                    <div class="w-4 h-4 flex items-center justify-center mr-2">
                        <i class="ri-download-line"></i>
                    </div>
                    Export Report
                </div>
            </button>
            <button class="px-4 py-2 bg-primary text-white rounded-button text-sm font-medium hover:bg-primary/90 whitespace-nowrap">
                <div class="flex items-center">
                    <div class="w-4 h-4 flex items-center justify-center mr-2">
                        <i class="ri-refresh-line"></i>
                    </div>
                    Refresh Data
                </div>
            </button>
        </div>
    </div>

    <!-- KPI Cards -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6">
        <div class="bg-white rounded shadow p-5">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-500">Total Users</p>
                    <p class="text-2xl font-bold mt-1">24,521</p>
                    <div class="flex items-center mt-2 text-xs font-medium text-green-600">
                        <div class="w-3 h-3 flex items-center justify-center mr-1">
                            <i class="ri-arrow-up-line"></i>
                        </div>
                        <span>12.5% from last month</span>
                    </div>
                </div>
                <div class="w-12 h-12 flex items-center justify-center bg-indigo-100 rounded-full text-primary">
                    <i class="ri-user-line ri-xl"></i>
                </div>
            </div>
        </div>
        <div class="bg-white rounded shadow p-5">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-500">Cards Sent</p>
                    <p class="text-2xl font-bold mt-1">87,342</p>
                    <div class="flex items-center mt-2 text-xs font-medium text-green-600">
                        <div class="w-3 h-3 flex items-center justify-center mr-1">
                            <i class="ri-arrow-up-line"></i>
                        </div>
                        <span>8.3% from last month</span>
                    </div>
                </div>
                <div class="w-12 h-12 flex items-center justify-center bg-green-100 rounded-full text-green-600">
                    <i class="ri-mail-send-line ri-xl"></i>
                </div>
            </div>
        </div>
        <div class="bg-white rounded shadow p-5">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-500">Total Revenue</p>
                    <p class="text-2xl font-bold mt-1">$156,842</p>
                    <div class="flex items-center mt-2 text-xs font-medium text-green-600">
                        <div class="w-3 h-3 flex items-center justify-center mr-1">
                            <i class="ri-arrow-up-line"></i>
                        </div>
                        <span>15.2% from last month</span>
                    </div>
                </div>
                <div class="w-12 h-12 flex items-center justify-center bg-blue-100 rounded-full text-blue-600">
                    <i class="ri-money-dollar-circle-line ri-xl"></i>
                </div>
            </div>
        </div>
        <div class="bg-white rounded shadow p-5">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm font-medium text-gray-500">Conversion Rate</p>
                    <p class="text-2xl font-bold mt-1">5.8%</p>
                    <div class="flex items-center mt-2 text-xs font-medium text-red-600">
                        <div class="w-3 h-3 flex items-center justify-center mr-1">
                            <i class="ri-arrow-down-line"></i>
                        </div>
                        <span>0.5% from last month</span>
                    </div>
                </div>
                <div class="w-12 h-12 flex items-center justify-center bg-purple-100 rounded-full text-purple-600">
                    <i class="ri-percent-line ri-xl"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Analytics Content -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
        <!-- User Growth Chart -->
        <div class="bg-white rounded shadow lg:col-span-2">
            <div class="p-5 border-b border-gray-200">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-medium">User Growth</h3>
                    <div class="flex space-x-2">
                        <button class="user-growth-period-btn px-3 py-1 text-xs font-medium rounded-full bg-primary text-white" data-period="daily">Daily</button>
                        <button class="user-growth-period-btn px-3 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-600" data-period="weekly">Weekly</button>
                        <button class="user-growth-period-btn px-3 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-600" data-period="monthly">Monthly</button>
                    </div>
                </div>
            </div>
            <div class="p-5">
                <div id="user-growth-chart" class="h-80"></div>
            </div>
        </div>

        <!-- User Demographics -->
        <div class="bg-white rounded shadow">
            <div class="p-5 border-b border-gray-200">
                <h3 class="text-lg font-medium">User Demographics</h3>
            </div>
            <div class="p-5">
                <div id="user-demographics-chart" class="h-80"></div>
            </div>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
        <!-- Popular Categories -->
        <div class="bg-white rounded shadow">
            <div class="p-5 border-b border-gray-200">
                <h3 class="text-lg font-medium">Popular Categories</h3>
            </div>
            <div class="p-5">
                <div id="popular-categories-chart" class="h-72"></div>
            </div>
        </div>

        <!-- Popular Templates -->
        <div class="bg-white rounded shadow">
            <div class="p-5 border-b border-gray-200">
                <h3 class="text-lg font-medium">Popular Templates</h3>
            </div>
            <div class="p-5">
                <div id="popular-templates-chart" class="h-72"></div>
            </div>
        </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
        <!-- Revenue Breakdown -->
        <div class="bg-white rounded shadow">
            <div class="p-5 border-b border-gray-200">
                <h3 class="text-lg font-medium">Revenue Breakdown</h3>
            </div>
            <div class="p-5">
                <div id="revenue-breakdown-chart" class="h-64"></div>
            </div>
        </div>

        <!-- Subscription Tiers -->
        <div class="bg-white rounded shadow">
            <div class="p-5 border-b border-gray-200">
                <h3 class="text-lg font-medium">Subscription Tiers</h3>
            </div>
            <div class="p-5">
                <div id="subscription-tiers-chart" class="h-64"></div>
            </div>
        </div>

        <!-- User Engagement -->
        <div class="bg-white rounded shadow">
            <div class="p-5 border-b border-gray-200">
                <h3 class="text-lg font-medium">User Engagement</h3>
            </div>
            <div class="p-5">
                <div id="user-engagement-chart" class="h-64"></div>
            </div>
        </div>
    </div>

    <!-- Platform Usage Patterns -->
    <div class="bg-white rounded shadow mb-6">
        <div class="p-5 border-b border-gray-200">
            <div class="flex items-center justify-between">
                <h3 class="text-lg font-medium">Platform Usage Patterns</h3>
                <div class="flex space-x-2">
                    <button class="usage-pattern-btn px-3 py-1 text-xs font-medium rounded-full bg-primary text-white" data-pattern="hourly">Hourly</button>
                    <button class="usage-pattern-btn px-3 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-600" data-pattern="daily">Daily</button>
                    <button class="usage-pattern-btn px-3 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-600" data-pattern="weekly">Weekly</button>
                </div>
            </div>
        </div>
        <div class="p-5">
            <div id="platform-usage-chart" class="h-80"></div>
        </div>
    </div>

    <!-- Top Performing Content -->
    <div class="bg-white rounded shadow mb-6">
        <div class="p-5 border-b border-gray-200">
            <h3 class="text-lg font-medium">Top Performing Content</h3>
        </div>
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Template</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Views</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Uses</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Conversion</th>
                        <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Revenue</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="h-10 w-14 bg-gray-100 rounded overflow-hidden mr-3">
                                    <img src="https://readdy.ai/api/search-image?query=birthday%20card%20design%20colorful%20balloons%20and%20confetti&width=100&height=70&seq=card1" alt="Birthday Celebration" class="h-full w-full object-cover">
                                </div>
                                <div>
                                    <div class="text-sm font-medium text-gray-900">Birthday Celebration</div>
                                    <div class="text-xs text-gray-500">Premium Template</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full">Birthday</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">12,845</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">3,256</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">25.3%</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$8,140</td>
                    </tr>
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="h-10 w-14 bg-gray-100 rounded overflow-hidden mr-3">
                                    <img src="https://readdy.ai/api/search-image?query=wedding%20card%20design%20elegant%20floral%20white%20and%20gold&width=100&height=70&seq=card2" alt="Wedding Elegance" class="h-full w-full object-cover">
                                </div>
                                <div>
                                    <div class="text-sm font-medium text-gray-900">Wedding Elegance</div>
                                    <div class="text-xs text-gray-500">Premium Template</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 py-1 text-xs font-medium bg-pink-100 text-pink-800 rounded-full">Wedding</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">10,532</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2,845</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">27.0%</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$7,112</td>
                    </tr>
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="h-10 w-14 bg-gray-100 rounded overflow-hidden mr-3">
                                    <img src="https://readdy.ai/api/search-image?query=thank%20you%20card%20design%20simple%20elegant%20gratitude&width=100&height=70&seq=card3" alt="Gratitude Note" class="h-full w-full object-cover">
                                </div>
                                <div>
                                    <div class="text-sm font-medium text-gray-900">Gratitude Note</div>
                                    <div class="text-xs text-gray-500">Basic Template</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 py-1 text-xs font-medium bg-purple-100 text-purple-800 rounded-full">Thank You</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">9,874</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">3,012</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">30.5%</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$6,024</td>
                    </tr>
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="h-10 w-14 bg-gray-100 rounded overflow-hidden mr-3">
                                    <img src="https://readdy.ai/api/search-image?query=holiday%20card%20design%20christmas%20tree%20snow%20festive&width=100&height=70&seq=card4" alt="Holiday Cheer" class="h-full w-full object-cover">
                                </div>
                                <div>
                                    <div class="text-sm font-medium text-gray-900">Holiday Cheer</div>
                                    <div class="text-xs text-gray-500">Premium Template</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">Holiday</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">8,956</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2,567</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">28.7%</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$5,134</td>
                    </tr>
                    <tr>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <div class="flex items-center">
                                <div class="h-10 w-14 bg-gray-100 rounded overflow-hidden mr-3">
                                    <img src="https://readdy.ai/api/search-image?query=anniversary%20card%20design%20romantic%20elegant%20hearts&width=100&height=70&seq=card5" alt="Anniversary Love" class="h-full w-full object-cover">
                                </div>
                                <div>
                                    <div class="text-sm font-medium text-gray-900">Anniversary Love</div>
                                    <div class="text-xs text-gray-500">Premium Template</div>
                                </div>
                            </div>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap">
                            <span class="px-2 py-1 text-xs font-medium bg-orange-100 text-orange-800 rounded-full">Anniversary</span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">7,845</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">2,134</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">27.2%</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$4,268</td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="px-6 py-4 border-t border-gray-200">
            <button class="text-sm text-primary font-medium hover:text-primary/80">View All Templates</button>
        </div>
    </div>

    <!-- Geographic Distribution -->
    <div class="bg-white rounded shadow mb-6">
        <div class="p-5 border-b border-gray-200">
            <h3 class="text-lg font-medium">Geographic Distribution</h3>
        </div>
        <div class="p-5">
            <div id="geographic-distribution-chart" class="h-96"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.5.0/echarts.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.5.0/extension/dataTool.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts-gl/2.0.9/echarts-gl.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.5.0/extension/bmap.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Date Range Dropdown
            const dateRangeButton = document.getElementById('date-range-button');
            const dateRangeDropdown = document.getElementById('date-range-dropdown');
            const dateRangeText = document.getElementById('date-range-text');
            const dateRangeOptions = document.querySelectorAll('.date-range-option');

            dateRangeButton.addEventListener('click', function() {
                dateRangeDropdown.classList.toggle('hidden');
            });

            document.addEventListener('click', function(event) {
                if (!dateRangeButton.contains(event.target) && !dateRangeDropdown.contains(event.target)) {
                    dateRangeDropdown.classList.add('hidden');
                }
            });

            dateRangeOptions.forEach(option => {
                option.addEventListener('click', function() {
                    const range = this.getAttribute('data-range');
                    let rangeText = '';

                    switch(range) {
                        case '7':
                            rangeText = 'Last 7 Days';
                            break;
                        case '30':
                            rangeText = 'Last 30 Days';
                            break;
                        case '90':
                            rangeText = 'Last 90 Days';
                            break;
                        case '365':
                            rangeText = 'Last 12 Months';
                            break;
                        case 'custom':
                            rangeText = 'Custom Range';
                            // Here you would typically open a date picker
                            break;
                    }

                    dateRangeText.textContent = rangeText;
                    dateRangeDropdown.classList.add('hidden');

                    // Here you would typically update all charts with the new date range
                    updateAllCharts(range);
                });
            });

            // User Growth Chart
            const userGrowthChart = echarts.init(document.getElementById('user-growth-chart'));
            const userGrowthOption = {
                tooltip: {
                    trigger: 'axis',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                legend: {
                    data: ['New Users', 'Active Users'],
                    bottom: 0
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '10%',
                    top: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: ['1 May', '2 May', '3 May', '4 May', '5 May', '6 May', '7 May', '8 May', '9 May', '10 May', '11 May', '12 May', '13 May', '14 May'],
                    axisLine: {
                        lineStyle: {
                            color: '#ddd'
                        }
                    },
                    axisLabel: {
                        color: '#666'
                    }
                },
                yAxis: {
                    type: 'value',
                    axisLine: {
                        show: false
                    },
                    axisLabel: {
                        color: '#666'
                    },
                    splitLine: {
                        lineStyle: {
                            color: '#eee'
                        }
                    }
                },
                series: [
                    {
                        name: 'New Users',
                        type: 'line',
                        smooth: true,
                        symbol: 'none',
                        lineStyle: {
                            width: 3,
                            color: '#4f46e5'
                        },
                        areaStyle: {
                            color: {
                                type: 'linear',
                                x: 0,
                                y: 0,
                                x2: 0,
                                y2: 1,
                                colorStops: [{
                                    offset: 0, color: 'rgba(79, 70, 229, 0.2)'
                                }, {
                                    offset: 1, color: 'rgba(79, 70, 229, 0.01)'
                                }]
                            }
                        },
                        data: [120, 132, 101, 134, 90, 230, 210, 182, 191, 234, 290, 330, 310, 350]
                    },
                    {
                        name: 'Active Users',
                        type: 'line',
                        smooth: true,
                        symbol: 'none',
                        lineStyle: {
                            width: 3,
                            color: '#10b981'
                        },
                        areaStyle: {
                            color: {
                                type: 'linear',
                                x: 0,
                                y: 0,
                                x2: 0,
                                y2: 1,
                                colorStops: [{
                                    offset: 0, color: 'rgba(16, 185, 129, 0.2)'
                                }, {
                                    offset: 1, color: 'rgba(16, 185, 129, 0.01)'
                                }]
                            }
                        },
                        data: [820, 932, 901, 934, 1290, 1330, 1320, 1450, 1520, 1660, 1820, 1950, 2100, 2260]
                    }
                ]
            };
            userGrowthChart.setOption(userGrowthOption);

            // User Demographics Chart
            const userDemographicsChart = echarts.init(document.getElementById('user-demographics-chart'));
            const userDemographicsOption = {
                tooltip: {
                    trigger: 'item',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                legend: {
                    orient: 'vertical',
                    right: 10,
                    top: 'center',
                    textStyle: {
                        color: '#666'
                    }
                },
                series: [
                    {
                        name: 'User Demographics',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        center: ['40%', '50%'],
                        avoidLabelOverlap: false,
                        itemStyle: {
                            borderRadius: 8,
                            borderColor: '#fff',
                            borderWidth: 2
                        },
                        label: {
                            show: false
                        },
                        emphasis: {
                            label: {
                                show: false
                            }
                        },
                        labelLine: {
                            show: false
                        },
                        data: [
                            { value: 35, name: '18-24', itemStyle: { color: '#4f46e5' } },
                            { value: 28, name: '25-34', itemStyle: { color: '#10b981' } },
                            { value: 16, name: '35-44', itemStyle: { color: '#f59e0b' } },
                            { value: 12, name: '45-54', itemStyle: { color: '#ef4444' } },
                            { value: 9, name: '55+', itemStyle: { color: '#8b5cf6' } }
                        ]
                    }
                ]
            };
            userDemographicsChart.setOption(userDemographicsOption);

            // Popular Categories Chart
            const popularCategoriesChart = echarts.init(document.getElementById('popular-categories-chart'));
            const popularCategoriesOption = {
                tooltip: {
                    trigger: 'axis',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    },
                    axisPointer: {
                        type: 'shadow'
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    top: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'value',
                    axisLine: {
                        show: false
                    },
                    axisLabel: {
                        color: '#666'
                    },
                    splitLine: {
                        lineStyle: {
                            color: '#eee'
                        }
                    }
                },
                yAxis: {
                    type: 'category',
                    data: ['Birthday', 'Wedding', 'Thank You', 'Holiday', 'Anniversary', 'Congratulations'],
                    axisLine: {
                        lineStyle: {
                            color: '#ddd'
                        }
                    },
                    axisLabel: {
                        color: '#666'
                    }
                },
                series: [
                    {
                        name: 'Cards Sent',
                        type: 'bar',
                        barWidth: '60%',
                        data: [
                            { value: 28456, itemStyle: { color: '#2563eb' } },
                            { value: 21345, itemStyle: { color: '#db2777' } },
                            { value: 18234, itemStyle: { color: '#9333ea' } },
                            { value: 15678, itemStyle: { color: '#16a34a' } },
                            { value: 12567, itemStyle: { color: '#ea580c' } },
                            { value: 9876, itemStyle: { color: '#4f46e5' } }
                        ],
                        label: {
                            show: true,
                            position: 'right',
                            formatter: '{c}'
                        },
                        itemStyle: {
                            borderRadius: [0, 4, 4, 0]
                        }
                    }
                ]
            };
            popularCategoriesChart.setOption(popularCategoriesOption);

            // Popular Templates Chart
            const popularTemplatesChart = echarts.init(document.getElementById('popular-templates-chart'));
            const popularTemplatesOption = {
                tooltip: {
                    trigger: 'axis',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '3%',
                    top: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'category',
                    data: ['Birthday Celebration', 'Wedding Elegance', 'Gratitude Note', 'Holiday Cheer', 'Anniversary Love'],
                    axisLine: {
                        lineStyle: {
                            color: '#ddd'
                        }
                    },
                    axisLabel: {
                        color: '#666',
                        interval: 0,
                        rotate: 30
                    }
                },
                yAxis: {
                    type: 'value',
                    axisLine: {
                        show: false
                    },
                    axisLabel: {
                        color: '#666'
                    },
                    splitLine: {
                        lineStyle: {
                            color: '#eee'
                        }
                    }
                },
                series: [
                    {
                        name: 'Uses',
                        type: 'bar',
                        barWidth: '40%',
                        data: [3256, 2845, 3012, 2567, 2134],
                        itemStyle: {
                            color: '#4f46e5',
                            borderRadius: [4, 4, 0, 0]
                        }
                    }
                ]
            };
            popularTemplatesChart.setOption(popularTemplatesOption);

            // Revenue Breakdown Chart
            const revenueBreakdownChart = echarts.init(document.getElementById('revenue-breakdown-chart'));
            const revenueBreakdownOption = {
                tooltip: {
                    trigger: 'item',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                legend: {
                    bottom: '0%',
                    left: 'center',
                    textStyle: {
                        color: '#666'
                    }
                },
                series: [
                    {
                        name: 'Revenue Source',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        center: ['50%', '45%'],
                        avoidLabelOverlap: false,
                        itemStyle: {
                            borderRadius: 8,
                            borderColor: '#fff',
                            borderWidth: 2
                        },
                        label: {
                            show: false
                        },
                        emphasis: {
                            label: {
                                show: false
                            }
                        },
                        labelLine: {
                            show: false
                        },
                        data: [
                            { value: 65, name: 'Subscriptions', itemStyle: { color: '#4f46e5' } },
                            { value: 20, name: 'One-time Purchases', itemStyle: { color: '#10b981' } },
                            { value: 15, name: 'Add-ons', itemStyle: { color: '#f59e0b' } }
                        ]
                    }
                ]
            };
            revenueBreakdownChart.setOption(revenueBreakdownOption);

            // Subscription Tiers Chart
            const subscriptionTiersChart = echarts.init(document.getElementById('subscription-tiers-chart'));
            const subscriptionTiersOption = {
                tooltip: {
                    trigger: 'item',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                legend: {
                    bottom: '0%',
                    left: 'center',
                    textStyle: {
                        color: '#666'
                    }
                },
                series: [
                    {
                        name: 'Subscription Tier',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        center: ['50%', '45%'],
                        avoidLabelOverlap: false,
                        itemStyle: {
                            borderRadius: 8,
                            borderColor: '#fff',
                            borderWidth: 2
                        },
                        label: {
                            show: false
                        },
                        emphasis: {
                            label: {
                                show: false
                            }
                        },
                        labelLine: {
                            show: false
                        },
                        data: [
                            { value: 3245, name: 'Basic Plan', itemStyle: { color: '#4f46e5' } },
                            { value: 4128, name: 'Premium Plan', itemStyle: { color: '#10b981' } },
                            { value: 1369, name: 'Business Plan', itemStyle: { color: '#f59e0b' } }
                        ]
                    }
                ]
            };
            subscriptionTiersChart.setOption(subscriptionTiersOption);

            // User Engagement Chart
            const userEngagementChart = echarts.init(document.getElementById('user-engagement-chart'));
            const userEngagementOption = {
                tooltip: {
                    trigger: 'item',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                legend: {
                    bottom: '0%',
                    left: 'center',
                    textStyle: {
                        color: '#666'
                    }
                },
                series: [
                    {
                        name: 'Engagement',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        center: ['50%', '45%'],
                        avoidLabelOverlap: false,
                        itemStyle: {
                            borderRadius: 8,
                            borderColor: '#fff',
                            borderWidth: 2
                        },
                        label: {
                            show: false
                        },
                        emphasis: {
                            label: {
                                show: false
                            }
                        },
                        labelLine: {
                            show: false
                        },
                        data: [
                            { value: 45, name: 'High Engagement', itemStyle: { color: '#10b981' } },
                            { value: 30, name: 'Medium Engagement', itemStyle: { color: '#f59e0b' } },
                            { value: 25, name: 'Low Engagement', itemStyle: { color: '#ef4444' } }
                        ]
                    }
                ]
            };
            userEngagementChart.setOption(userEngagementOption);

            // Platform Usage Chart
            const platformUsageChart = echarts.init(document.getElementById('platform-usage-chart'));
            const platformUsageOption = {
                tooltip: {
                    trigger: 'axis',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                legend: {
                    data: ['Card Creation', 'Card Sending', 'Template Views'],
                    bottom: 0
                },
                grid: {
                    left: '3%',
                    right: '4%',
                    bottom: '10%',
                    top: '3%',
                    containLabel: true
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: ['12AM', '2AM', '4AM', '6AM', '8AM', '10AM', '12PM', '2PM', '4PM', '6PM', '8PM', '10PM'],
                    axisLine: {
                        lineStyle: {
                            color: '#ddd'
                        }
                    },
                    axisLabel: {
                        color: '#666'
                    }
                },
                yAxis: {
                    type: 'value',
                    axisLine: {
                        show: false
                    },
                    axisLabel: {
                        color: '#666'
                    },
                    splitLine: {
                        lineStyle: {
                            color: '#eee'
                        }
                    }
                },
                series: [
                    {
                        name: 'Card Creation',
                        type: 'line',
                        smooth: true,
                        symbol: 'none',
                        lineStyle: {
                            width: 3,
                            color: '#4f46e5'
                        },
                        data: [120, 80, 60, 40, 100, 220, 380, 420, 460, 520, 560, 320]
                    },
                    {
                        name: 'Card Sending',
                        type: 'line',
                        smooth: true,
                        symbol: 'none',
                        lineStyle: {
                            width: 3,
                            color: '#10b981'
                        },
                        data: [140, 90, 70, 50, 120, 260, 420, 460, 520, 580, 620, 360]
                    },
                    {
                        name: 'Template Views',
                        type: 'line',
                        smooth: true,
                        symbol: 'none',
                        lineStyle: {
                            width: 3,
                            color: '#f59e0b'
                        },
                        data: [320, 180, 160, 140, 280, 460, 680, 720, 760, 820, 860, 520]
                    }
                ]
            };
            platformUsageChart.setOption(platformUsageOption);

            // Geographic Distribution Chart
            const geographicDistributionChart = echarts.init(document.getElementById('geographic-distribution-chart'));
            const geographicDistributionOption = {
                tooltip: {
                    trigger: 'item',
                    backgroundColor: 'rgba(255, 255, 255, 0.8)',
                    borderColor: '#eee',
                    borderWidth: 1,
                    textStyle: {
                        color: '#1f2937'
                    }
                },
                visualMap: {
                    min: 0,
                    max: 10000,
                    text: ['High', 'Low'],
                    realtime: false,
                    calculable: true,
                    inRange: {
                        color: ['#e0f2fe', '#3b82f6', '#1d4ed8']
                    }
                },
                series: [
                    {
                        name: 'Users',
                        type: 'map',
                        map: 'world',
                        roam: true,
                        emphasis: {
                            label: {
                                show: true
                            }
                        },
                        data: [
                            { name: 'United States', value: 9823 },
                            { name: 'Canada', value: 3421 },
                            { name: 'United Kingdom', value: 2845 },
                            { name: 'Australia', value: 2134 },
                            { name: 'Germany', value: 1856 },
                            { name: 'France', value: 1567 },
                            { name: 'India', value: 1345 },
                            { name: 'Brazil', value: 1234 },
                            { name: 'Japan', value: 1123 },
                            { name: 'Mexico', value: 987 }
                        ]
                    }
                ]
            };
            geographicDistributionChart.setOption(geographicDistributionOption);

            // User Growth Period Buttons
            const userGrowthPeriodBtns = document.querySelectorAll('.user-growth-period-btn');
            userGrowthPeriodBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    userGrowthPeriodBtns.forEach(b => {
                        b.classList.remove('bg-primary', 'text-white');
                        b.classList.add('bg-gray-100', 'text-gray-600');
                    });
                    this.classList.remove('bg-gray-100', 'text-gray-600');
                    this.classList.add('bg-primary', 'text-white');

                    const period = this.getAttribute('data-period');
                    updateUserGrowthChart(period);
                });
            });

            // Usage Pattern Buttons
            const usagePatternBtns = document.querySelectorAll('.usage-pattern-btn');
            usagePatternBtns.forEach(btn => {
                btn.addEventListener('click', function() {
                    usagePatternBtns.forEach(b => {
                        b.classList.remove('bg-primary', 'text-white');
                        b.classList.add('bg-gray-100', 'text-gray-600');
                    });
                    this.classList.remove('bg-gray-100', 'text-gray-600');
                    this.classList.add('bg-primary', 'text-white');

                    const pattern = this.getAttribute('data-pattern');
                    updatePlatformUsageChart(pattern);
                });
            });

            // Function to update all charts based on date range
            function updateAllCharts(range) {
                // This would typically involve API calls to fetch new data
                console.log(`Updating all charts with range: ${range}`);
                // For demo purposes, we'll just log the action
            }

            // Function to update user growth chart based on period
            function updateUserGrowthChart(period) {
                // This would typically involve API calls to fetch new data
                console.log(`Updating user growth chart with period: ${period}`);
                // For demo purposes, we'll just log the action
            }

            // Function to update platform usage chart based on pattern
            function updatePlatformUsageChart(pattern) {
                // This would typically involve API calls to fetch new data
                console.log(`Updating platform usage chart with pattern: ${pattern}`);
                // For demo purposes, we'll just log the action
            }

            // Resize charts when window size changes
            window.addEventListener('resize', function() {
                userGrowthChart.resize();
                userDemographicsChart.resize();
                popularCategoriesChart.resize();
                popularTemplatesChart.resize();
                revenueBreakdownChart.resize();
                subscriptionTiersChart.resize();
                userEngagementChart.resize();
                platformUsageChart.resize();
                geographicDistributionChart.resize();
            });
        });
    </script>
}
