@model IEnumerable<frontend.Models.Subscription>

@{
    ViewData["Title"] = "Subscriptions Management | E-Greeting Card Platform";
    Layout = "_AdminLayout";
}

<!-- Breadcrumbs & Page Title -->
<div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6">
    <div>
        <div class="flex items-center text-sm text-gray-500 mb-2">
            <a asp-controller="Admin" asp-action="Dashboard" class="hover:text-primary">Dashboard</a>
            <div class="w-4 h-4 flex items-center justify-center mx-1">
                <i class="ri-arrow-right-s-line"></i>
            </div>
            <span class="text-gray-700">Subscriptions</span>
        </div>
        <h1 class="text-2xl font-bold text-gray-900">Subscriptions</h1>
    </div>
    <a asp-action="Create" class="mt-3 sm:mt-0 px-4 py-2 bg-primary text-white rounded-button text-sm font-medium hover:bg-primary/90 whitespace-nowrap flex items-center">
        <div class="w-4 h-4 flex items-center justify-center mr-2">
            <i class="ri-add-line"></i>
        </div>
        Add New Subscription
    </a>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6 flex items-center justify-between" role="alert">
        <div class="flex items-center">
            <div class="w-5 h-5 mr-2 flex items-center justify-center">
                <i class="ri-check-line"></i>
            </div>
            <span>@TempData["SuccessMessage"]</span>
        </div>
        <button type="button" class="text-green-700" onclick="this.parentElement.style.display='none'">
            <div class="w-5 h-5 flex items-center justify-center">
                <i class="ri-close-line"></i>
            </div>
        </button>
    </div>
}

<!-- Subscriptions Table -->
<div class="bg-white rounded shadow overflow-hidden mb-6">
    <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email List</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Start Date</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">End Date</th>
                    <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Is Active</th>
                    <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Payment Verified</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                @foreach (var item in Model)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@item.EmailList</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">@item.StartDate.ToShortDateString()</td>
                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">@item.EndDate.ToShortDateString()</td>
                        <td class="px-6 py-4 text-center text-sm">
                            <span class="px-2 py-1 rounded-full text-xs font-semibold @(item.IsActive ? "bg-green-100 text-green-700" : "bg-red-100 text-red-700")">
                                @(item.IsActive ? "Active" : "Inactive")
                            </span>
                        </td>
                        <td class="px-6 py-4 text-center text-sm">
                            <span class="px-2 py-1 rounded-full text-xs font-semibold @(item.PaymentVerified ? "bg-green-100 text-green-700" : "bg-yellow-100 text-yellow-700")">
                                @(item.PaymentVerified ? "Verified" : "Pending")
                            </span>
                        </td>
                        <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <div class="flex justify-end space-x-2">
                                <a asp-action="Edit" asp-route-id="@item.SubscriptionId" class="text-primary hover:text-primary/80" title="Edit">
                                    <div class="w-5 h-5 flex items-center justify-center">
                                        <i class="ri-edit-line"></i>
                                    </div>
                                </a>
                                <button data-id="@item.SubscriptionId" class="text-red-600 hover:text-red-800 open-delete-modal" title="Delete">
                                    <div class="w-5 h-5 flex items-center justify-center">
                                        <i class="ri-delete-bin-line"></i>
                                    </div>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="delete-modal" class="fixed inset-0 z-50 hidden bg-black/50 flex items-center justify-center">
    <div class="bg-white rounded-lg p-6 w-full max-w-sm shadow-lg">
        <h2 class="text-xl font-bold text-gray-900 mb-4">Confirm Delete</h2>
        <p class="text-sm text-gray-600 mb-6">Are you sure you want to delete this subscription? This action cannot be undone.</p>
        <form id="delete-form" method="post">
            <input type="hidden" name="id" id="delete-id" />
            <div class="flex justify-end space-x-2">
                <button type="button" id="cancel-delete" class="px-4 py-2 text-sm text-gray-700 bg-gray-200 rounded hover:bg-gray-300">Cancel</button>
                <button type="submit" class="px-4 py-2 text-sm text-white bg-red-600 rounded hover:bg-red-700">Delete</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const deleteModal = document.getElementById('delete-modal');
            const deleteForm = document.getElementById('delete-form');
            const deleteIdInput = document.getElementById('delete-id');
            const cancelBtn = document.getElementById('cancel-delete');

            document.querySelectorAll('.open-delete-modal').forEach(button => {
                button.addEventListener('click', function () {
                    const subscriptionId = this.getAttribute('data-id');
                    deleteIdInput.value = subscriptionId;
                    deleteForm.action = `/Subscription/Delete/${subscriptionId}`;
                    deleteModal.classList.remove('hidden');
                });
            });

            cancelBtn.addEventListener('click', function () {
                deleteModal.classList.add('hidden');
            });

            window.addEventListener('click', function (event) {
                if (event.target === deleteModal) {
                    deleteModal.classList.add('hidden');
                }
            });
        });
    </script>
}
